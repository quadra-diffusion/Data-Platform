swagger: '2.0'
info:
  version: '1.0'
  title: "DataPlatform"
  description: DataPlateforme est une API permettant aux client Affix d'associer des points d'intérêts à des emplacements publicitaires déjà existants dans la Data Platform ou en créer de nouveaux.L'idée générale est de mettre à disposition une base de données collaborative afin que les sociétés d'affichage puissent exploiter les donner et/ou alimenter la base de données.
  license:
    name: DataPlatform
    url: https://dataplatform-3334d.firebaseapp.com/api/v1
host: dataplatform-3334d.firebaseapp.com
basePath: /api/v1
schemes:
- https
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: Authorization Token
    in: header
security:
  - ApiKeyAuth: [73157b50-8c2f-11e9-b5d2-d58b63a3b90a]
paths:
  /poi:
    x-summary: POI
    get:
      summary: Récupération des POI
      responses:
        200:
          description: Lorqu'on fait la requête GET, on reçoit la liste et les infos des POI actifs et valide dans un tableau
          schema:
            type: array
            items:
              $ref: '#/definitions/poi'
          examples:
            application/json:
              - active: true
                valide: true
                adresse: RUE 5874
                codePostal: BP 8795 
                ville: PARIS
                pays: FRANCE
                idSociete: 73157b50-8c2f-11e9-b5d2-d58b63a3b90a
                id: 34ec58a0-903d-11e9-b352-5b6936110126
                idTypePoi: 9085ef10-8c36-11e9-96e0-b1fa4e021719
                nom: ATLANTIQUE
                urlLogoPoi:
                longitude: 74
                libelleTypePoi: BANQUES
                libelleSociete: QUADRA
                latitude: 15
    post:
      description: >-
        Lorsqu'on fait une requete POST, on enregistrer un nouveau POI en enregistrant ses informations.  ( NB: L' url des images de logo doit être une DataURL en base 64 )
      summary: Enregistrer un POI
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/poiRequest'
      responses:
        200:
          description: ''
          examples:
            application/json:
              'POI enrégistrée'
  /marques:
    x-summary: Marques
    get:
      summary: Récupération des marques
      responses:
        200:
          description: Lorqu'on fait la requête GET, on reçoit la liste et les infos des Marques actifs et valide dans un tableau
          schema:
            type: array
            items:
              $ref: '#/definitions/marques'
          examples:
            application/json:
              - active: true
                valide: true
                idSociete: 750073a0-8f6a-11e9-b112-b5325e9c8a36
                id: 4e2f2840-9044-11e9-8967-3508f29dfba6
                idTypeMarque: 836bdbb0-8c35-11e9-beea-996d0077bd8d
                nom: APLE
                urlLogoMarque:
                libelleTypeMarque: HIGH TECH
                libelleSociete: SUPRA
    post:
      description: >-
        Lorsqu'on fait une requete POST, on enregistrer une nouvelle marque en enregistrant ses informations. ( NB: L' url des images de logo doit être une DataURL en base 64 )
      summary: Enregistrer une Marque
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/marquesRequest'
      responses:
        200:
          description: ''
          examples:
            application/json:
              'Marque enrégistrée'              
  /type_poi:
    x-summary: TypePOI
    get:
      summary: Récupération des Type de POI
      responses:
        200:
          description: Lorqu'on fait la requête GET, on reçoit la liste des Types de POI actifs et valide dans un tableau
          schema:
            type: array
            items:
              $ref: '#/definitions/type_poi'
          examples:
            application/json:
              - active: true
                valide: true
                id: 0002bc60-8c37-11e9-a7e8-e30d36e50354
                nom: HIGH TECH E
    post:
      description: >-
        Lorsqu'on fait une requete POST, on enregistrer un nouveau Type de POI en enregistrant ses informations
      summary: Enregistrer un Type de POI
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/type_poiRequest'
      responses:
        200:
          description: ''
          examples:
            application/json:
              'Type de poi enrégistrée'
  /type_marques:
    x-summary: TypeMarques
    get:
      summary: Récupération des Type de Marques
      responses:
        200:
          description: Lorqu'on fait la requête GET, on reçoit la liste des Types de Marques actifs et valide dans un tableau
          schema:
            type: array
            items:
              $ref: '#/definitions/type_marques'
          examples:
            application/json:
              - active: true
                valide: true
                id: 53166510-8c36-11e9-8c2c-977a3d3d1953
                nom: BANQUES
    post:
      description: >-
        Lorsqu'on fait une requete POST, on enregistrer un nouveau Type de Marques en enregistrant ses informations
      summary: Enregistrer un Type de Marques
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/type_marquesRequest'
      responses:
        200:
          description: ''
          examples:
            application/json:
              'Type de marque enrégistrée'
  /getMairies:
    x-summary: Recherche Mairies
    get:
      summary: Récupération des mairies
      parameters:
        - name: codePostal
          in: query
          description: code postal de la mairie
          type: string
          x-example: '31370'
        - name: codeInsee
          in: query
          description: code insee de la mairie (5 caracteres obligatoire)
          type: number
          x-example: 31454
        - name: commune
          in: query
          description: parametre de recherche au niveau du nom de la mairie
          type: string
          x-example: 'Rieumes'
      responses:
        200:
          description: Lorqu'on fait la requête GET, on récupére des informations sur une mairie. (NB) Les six possibilités de recherche avec les paramètres(codeInsee, codePostal, commune) sont inclues.
          schema:
            type: array
            items:
              $ref: '#/definitions/getMairies'
          examples:
            application/json:
              - active: false
                adresse: 1 place d'Armes
                codePostal: 31370
                codeInsee: 31454
                id: 5bb7d500-9c03-11e9-9c2c-b5729ac1735d
                latitude: 43.4124984741
                libelleSociete: QUADRA DIFFUSION
                libelleTypePoi: MAIRIE
                longitude: 1.11960995197
                nom: Mairie de Rieumes
                pays: FRANCE
                valide: false
                ville: Rieumes
  /getMarques:
    x-summary: Recherche Marques
    get:
      summary: Récupération des marques
      parameters:
        - name: nom
          in: query
          description: paramettre nom de recherche
          type: string
          x-example: 'e'
        - name: idMarque
          in: query
          description: l'id complet de la marque
          type: string
          x-example: '4e2f2840-9044-11e9-8967-3508f29dfba6'
      responses:
        200:
          description: On récupére des informations sur une ou plusieurs marque(s). (NB) Les trois possibilités de recherche avec les paramètres(idMarque, nom) sont inclues.
          schema:
            type: array
            items:
              $ref: '#/definitions/getMarques'
          examples:
            application/json:
              - active: true
                valide: true
                idSociete: 750073a0-8f6a-11e9-b112-b5325e9c8a36
                id: 4e2f2840-9044-11e9-8967-3508f29dfba6
                idTypeMarque: 836bdbb0-8c35-11e9-beea-996d0077bd8d
                nom: APLE
                urlLogoMarque:
                libelleTypeMarque: HIGH TECH
                libelleSociete: SUPRA
  /getCodeInsee:
    x-summary: Recherche Code Insee
    get:
      summary: Récupération d'un ou de plusieurs Code Insee
      parameters:
        - name: typecom
          in: query
          type: string
        - name: com
          in: query
          type: string
        - name: reg
          in: query
          type: string
        - name: dep
          in: query
          type: string
        - name: arr
          in: query
          type: string
        - name: tncc
          in: query
          type: string
        - name: ncc
          in: query
          type: string
        - name: nccenr
          in: query
          type: string
        - name: libelle
          in: query
          type: string
        - name: can
          in: query
          type: string
        - name: comparent
          in: query
          type: string
      responses:
        200:
          description: On récupére les code Insee en fonction des parametres envoyes via la request.
          schema:
            type: array
            items:
              $ref: '#/definitions/getCodeInsee'
          examples:
            application/json:
              - nomCommune: L'Abergement-Clémenciat
                codeInsee: 1001
  /getTypeMarques:
    x-summary: Recherche Type de Marques
    get:
      summary: Récupération des types de marques
      parameters:
        - name: nom
          in: query
          description: paramettre nom de recherche
          type: string
          x-example: 'e'
        - name: id
          in: query
          description: l'id complet du type de marque
          type: string
          x-example: ''
      responses:
        200:
          description: On récupére des informations sur un ou plusieurs type marque(s). (NB) Les trois possibilités de recherche avec les paramètres(id, nom) sont inclues.
          schema:
            type: array
            items:
              $ref: '#/definitions/getTypeMarques'
          examples:
            application/json:
              - active: true
                valide: true
                id: 3071fc90-8c36-11e9-a43e-85a5f398e44f
                nom: BIJOUTERIE
  /getCodePostal:
    x-summary: Recherche Code Postal
    put:
      summary: Récupération d'un ou de plusieurs Code Postaux d'une commune
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/getCodePostalRequest'
      responses:
        200:
          description: On récupére les code Postaux en fonction des parametres envoyes via la request.
          schema:
            type: array
            items:
              $ref: '#/definitions/getCodePostal'
          examples:
            application/json:
              - nomCommune: La Rochette-du-Buis
                codeInsee: 26279
                codePostal: 26170
definitions:
  poi:
    title: poi
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string
        adresse:
          type: string
        codePostal:
          type: string
        ville:
          type: string
        pays:
          type: string
        idSociete:
          type: string
        libelleSociete:
          type: string
        idTypePoi:
          type: string
        libelleTypePoi:
          type: string
        urlLogoPoi:
          type: string
        longitude:
          type: number
        latitude:
          type: number
  poiRequest:
    title: poiRequest
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        adresse:
          type: string
        codePostal:
          type: string
        ville:
          type: string
        pays:
          type: string
        idSociete:
          type: string
        idTypePoi:
          type: string
        urlLogoPoi:
          type: string
        longitude:
          type: number
        latitude:
          type: number
  marques:
    title: marques
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string
        idSociete:
          type: string
        idTypeMarque:
          type: string
        libelleSociete:
          type: string
        libelleTypeMarque:
          type: string  
        urlLogoMarque:
          type: string
  marquesRequest:
    title: marques
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        idSociete:
          type: string
        idTypeMarque:
          type: string  
        urlLogoMarque:
          type: string    
  type_poi:
    title: type_poi
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string
  type_poiRequest:
    title: type_poi
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
  type_marques:
    title: type_marques
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string          
  type_marquesRequest:
    title: type_marquesRequest
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
  getMairies:
    title: getMairies
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string
        adresse:
          type: string
        codePostal:
          type: string
        ville:
          type: string
        pays:
          type: string
        idSociete:
          type: string
        libelleSociete:
          type: string
        idTypePoi:
          type: string
        libelleTypePoi:
          type: string
        urlLogoPoi:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        codeInsee:
          type: number          
  getMarques:
    title: getMarques
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string
        idSociete:
          type: string
        idTypeMarque:
          type: string
        libelleSociete:
          type: string
        libelleTypeMarque:
          type: string  
        urlLogoMarque:
          type: string         
  getCodeInsee:
    title: getCodeInsee
    type: object
    properties:
      nomCommune:
        type: string
      codeInsee:
        type: number        
  getTypeMarques:
    title: getMarques
    type: object
    properties:
        active:
          type: boolean
        valide:
          type: boolean
        nom:
          type: string
        id:
          type: string        
  getCodePostal:
    title: getCodePostal
    type: object
    properties:
      nomCommune:
        type: string
      codeInsee:
        type: number
      codePostal:
        type: number     
  getCodePostalRequest:
    title: getCodePostalRequest
    type: object
    properties:
      typecom:
        type: string
      com:
        type: number
      reg:
        type: number
      dep:
        type: number
      arr:
        type: number
      tncc:
        type: number
      ncc:
        type: string
      nccenr:
        type: string
      libelle:
        type: string
      can:
        type: number
      comparent:
        type: number